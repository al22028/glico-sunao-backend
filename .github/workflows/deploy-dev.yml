name: CI/CD for development

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - dev/main
      - main

jobs:
  deploy:
    name: CI/CD for development
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # runs-on: [self-hosted, ubuntu]
    timeout-minutes: 30
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: "3.11.6"
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: "x64"

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set sha_short
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create dot env file
        shell: bash
        run: |
          touch .env
          version=$(node -p -e "require('./package.json').version" | sed 's/\.[^.]*$//')
          echo "API_VERSION_HASH=$version.${{ steps.vars.outputs.sha_short }}" >> .env

      - name: Install dependencies
        run: npm install

      - name: Install serverless
        run: npm install -g serverless

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Run format
        run: poetry run task format

      - name: Deploy
        run: npm run deploy:dev
